name: Security and Dependencies

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every Monday at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Check for security vulnerabilities with safety
      run: |
        pip install -r requirements.txt
        safety check --json --continue-on-error
      continue-on-error: true

    - name: Check for vulnerabilities with pip-audit
      run: |
        pip-audit --requirement requirements.txt --desc
      continue-on-error: true

    - name: Check for outdated dependencies
      run: |
        pip list --outdated --format=json > outdated-deps.json
        echo "## Outdated Dependencies" >> $GITHUB_STEP_SUMMARY
        echo '```json' >> $GITHUB_STEP_SUMMARY
        cat outdated-deps.json >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  code-security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run framework's security check
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python tools/validation/validate-pipeline.py --check security --ci

    - name: Check for hardcoded secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before || github.event.pull_request.base.sha || github.event.repository.default_branch }}
        head: ${{ github.event.after || github.event.pull_request.head.sha || 'HEAD' }}
        extra_args: --debug --only-verified

  # CodeQL analysis for Python
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  # License compliance check
  license-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Check licenses
      run: |
        pip install pip-licenses
        pip install -r requirements.txt
        echo "## License Report" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        pip-licenses --with-urls --format=markdown >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
